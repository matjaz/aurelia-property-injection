var __extends=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a]);n.prototype=e.prototype,t.prototype=new n};System.register(["aurelia-metadata","aurelia-dependency-injection"],function(t){function e(t,e){return e?void n(t,e):function(e,n){a(e,n,t)}}function n(t,e){var n=i.Metadata.getOwn("design:type",t,e);a(t,e,n)}function a(t,e,n){if(n){var a=t.constructor,r=i.Metadata.getOwn(o,a);if(!r){var c=i.Metadata.getOwn(i.Metadata.instanceActivator,a);if(c){if(!(c instanceof s))throw new Error("Instance activator already set. Can not use property injection.")}else i.Metadata.define(i.Metadata.instanceActivator,s.instance,a);r={},i.Metadata.define(o,r,a)}r[e]=n}}var i,r,o,c,s;return t("inject",e),{setters:[function(t){i=t},function(t){r=t}],execute:function(){t("MetadataKey",o="di:propInjectables"),s=function(t){function e(e,n){void 0===e&&(e=r.Container.instance),void 0===n&&(n=r.ClassActivator.instance),t.call(this),this.container=e,this.classActivator=n,this.container=e,this.classActivator=n}return __extends(e,t),Object.defineProperty(e,"instance",{get:function(){return c||(c=new e)},enumerable:!0,configurable:!0}),e.prototype.invoke=function(t,e){var n=this.classActivator.invoke(t,e),a=i.Metadata.getOwn(o,t);if(a)for(var r in a)this.injectProperty(n,r,a[r]);return n},e.prototype.injectProperty=function(t,e,n){Object.defineProperty(t,e,{value:this.container.get(n)})},e}(ClassActivator),t("PropertyClassActivator",s)}}});